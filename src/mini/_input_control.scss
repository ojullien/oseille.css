/*
  Definitions for forms and input elements.
*/
// Different elements are styled based on the same set of rules.
$input-group-name: "input-group" !default; // Class name for input groups.
$_include-fluid-input-group: true !default; // [Hidden] Should fluid input groups be included? (boolean)
$input-group-fluid-name: "fluid" !default; // Class name for fluid input groups.
$input-group-vertical-name: "vertical" !default; // Class name for vertical input groups.
$input-group-mobile-breakpoint: 767px !default; // Breakpoint for fluid input group mobile view.

$input-disabled-opacity: 0.75 !default; // Opacity for input elements when disabled.

$input-back-color: #f8f8f8 !default; // Background color for input elements.
$input-fore-color: #111 !default; // Text color for input elements.
$input-border-color: #ddd !default; // Border color for input elements.
$input-focus-color: #0288d1 !default; // Border color for focused input elements.
$input-invalid-color: #d32f2f !default; // Border color for invalid input elements.

// == Uncomment below code if this module is used on its own ==
//
// $base-font-size:          1rem !default;        // Font sizing for all elements
// $universal-margin:        0.5rem !default;      // Universal margin for the most elements
// $universal-padding:       0.5rem !default;      // Universal padding for the most elements
// $universal-border-radius: 0.125rem !default;    // Universal border-radius for most elements
// $universal-box-shadow:    none !default;        // Universal box-shadow for most elements
// $universal-margin-var:          '--universal-margin' !default;
// $universal-padding-var:         '--universal-padding' !default;
// $universal-border-radius-var:   '--universal-border-radius' !default;
// $universal-box-shadow-var:      '--universal-box-shadow' !default;
// :root {
//  #{$universal-margin-var}: $universal-margin;
//  #{$universal-padding-var}: $universal-padding;
//  #{$universal-border-radius-var}: $universal-border-radius;
//  @if $universal-box-shadow != none {
//   #{$universal-box-shadow-var}: $universal-box-shadow;
//  }
// }
//
// ============================================================
// Check the `_input_control_mixins.scss` file to find this module's mixins.
@import "input_control_mixins";

// Input group styling.
.#{$input-group-name} {
    display: inline-block;
    // Fluid input groups
    @if $_include-fluid-input-group {
        &.#{$input-group-fluid-name} {
            display: flex;
            align-items: center;
            justify-content: center;
            & > input {
                max-width: 100%;
                flex-grow: 1;
                flex-basis: 0px;
            }
            // On mobile
            @media screen and (max-width: #{$input-group-mobile-breakpoint}) {
                align-items: stretch;
                flex-direction: column;
            }
        }
        // Vertical input groups
        &.#{$input-group-vertical-name} {
            display: flex;
            align-items: stretch;
            flex-direction: column;
            & > input {
                max-width: 100%;
                flex-grow: 1;
                flex-basis: 0px;
            }
        }
    }
}

// Correct the cursor style of increment and decrement buttons in Chrome.
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

// Correct style in Chrome and Safari.
[type="search"] {
    -webkit-appearance: textfield;
    outline-offset: -2px;
}

// Correct style in Chrome and Safari.
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

// Common textual input styling. - Avoid using box-shadow with these.
input:not([type]),
[type="text"],
[type="email"],
[type="number"],
[type="search"],
[type="password"],
[type="url"],
[type="tel"],
[type="checkbox"],
[type="radio"],
textarea,
select {
    box-sizing: border-box;
    // Background, color and border should not be unassigned, as the browser defaults will apply.
    background: var(#{$input-back-color-var});
    color: var(#{$input-fore-color-var});
    border: $__1px solid var(#{$input-border-color-var});
    border-radius: var(#{$universal-border-radius-var});
    margin: calc(var(#{$universal-margin-var}) / 2);
    padding: var(#{$universal-padding-var}) calc(1.5 * var(#{$universal-padding-var}));
}

// Hover, focus, disabled, readonly, invalid styling for common textual inputs.
input:not([type="button"]):not([type="submit"]):not([type="reset"]),
textarea,
select {
    &:hover,
    &:focus {
        border-color: var(#{$input-focus-color-var});
        box-shadow: none;
    }
    &:invalid,
    &:focus:invalid {
        border-color: var(#{$input-invalid-color-var});
        box-shadow: none;
    }
    &[readonly] {
        background: var(#{$secondary-back-color-var});
    }
}

// Fix for select and option elements overflowing their parent container.
select {
    max-width: 100%;
}

option {
    overflow: hidden;
    text-overflow: ellipsis;
}
// Styling for checkboxes and radio buttons.
[type="checkbox"],
[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    position: relative;
    height: calc(#{$base-font-size} + var(#{$universal-padding-var}) / 2);
    width: calc(#{$base-font-size} + var(#{$universal-padding-var}) / 2);
    vertical-align: text-bottom;
    padding: 0; // Remove padding added from previous styles.
    flex-basis: calc(
        #{$base-font-size} + var(#{$universal-padding-var}) / 2
    ) !important; // Override fluid input-group styling.
    flex-grow: 0 !important; // Using with fluid input-groups is not recommended.
    &:checked:before {
        position: absolute;
    }
}

[type="radio"] {
    border-radius: 100%;
    &:checked:before {
        border-radius: 100%;
        content: "";
        top: calc(#{$__1px} + var(#{$universal-padding-var}) / 2);
        left: calc(#{$__1px} + var(#{$universal-padding-var}) / 2);
        background: var(#{$input-fore-color-var});
        width: 0.5rem;
        height: 0.5rem;
    }
}

// Placeholder styling (keep browser-specific definitions separated, they do not play well together).
:placeholder-shown {
    color: var(#{$input-fore-color-var});
}
::-ms-placeholder {
    color: var(#{$input-fore-color-var});
    opacity: 0.54;
}
// Definitions for the button and button-like elements.


// Disabled styling for input and button elements.
input,
textarea,
select {
    // .button[disabled] is actually higher specificity than a.button, so no need for more than that
    &:disabled,
    &[disabled] {
        cursor: not-allowed;
        opacity: $input-disabled-opacity;
    }
}

