//
// The HTML <code> element displays its contents styled in a fashion intended to indicate that the text is a short
// fragment of computer code.
//
// To represent multiple lines of code, wrap the <code> element within a <pre> element. The <code> element by itself
// only represents a single phrase of code or line of code.
//
// The HTML Keyboard Input element (<kbd>) represents a span of inline text denoting textual user input from a
// keyboard, voice input, or any other text entry device.
//
// The HTML Sample Element (<samp>) is used to enclose inline text which represents sample (or quoted) output from
// a computer program.
//
// The HTML Variable element (<var>) represents the name of a variable in a mathematical expression or a programming
// context. It's typically presented using an italicized version of the current typeface, although that behavior is
// browser-dependent.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//
@use '../../2-settings/colors' as colors;
@use '../../2-settings/fonts' as fonts;
@use '../../2-settings/borders' as borders;
@use '../../2-settings/box-model' as boxmodel;

@mixin normalize-code {
    border: 0;
    // Correct the inheritance and scaling of font size in all browsers. By re-applying font-family and font-size
    font-family: fonts.get-stack('code');
    font-size: fonts.get-size('code');
    font-weight: inherit;
    // Prevent element from affecting the line height in all browsers.
    line-height: 0;
    margin: 0;
    padding: 0;
    position: relative;
    vertical-align: baseline; // Only applies to inline, inline-block and table-cell elements
}

@mixin normalize-text {
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
}
/* Inline code semantic styling */

code {
    background-color: var(--code-back-color, #{colors.get('code-back')});
    border-radius: borders.get('radius');
    border-style: none;

    //@include normalize-code;
    @include normalize-text;

    margin: 0;
    padding: 0;

    font-family: menlo, consolas, monospace;
    font-size: 0.85em;
    font-weight: inherit;

    line-height: 0;
    margin: 0;
    padding: 0;

    vertical-align: baseline;

    color: var(--code-fore-color, #121212);
    padding: calc(0.5rem / 4) calc(0.5rem / 2);
    text-align: left;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
    -webkit-user-select: all;
    user-select: all;

    // No border color by default and fore color is the default for text, can be altered manually.
    color: var(--code-fore-color, #{colors.get('fore-alt')}); // Allows live color tunning

    // This could be a bit counterintuitive and burden the codebase a bit, look into it again?
    padding: calc(#{boxmodel.get('padding')} / 4) calc(#{boxmodel.get('padding')} / 2);

    a:link,
    a:visited {
        color: var(--code-link-color, #{colors.get('fore-alt')}); // Allows live color tunning
    }
}

pre {
    background-color: var(--pre-back-color, #{colors.get('code-back')});
    border: 0 solid colors.get('border');
    border-left: thick solid colors.get('sidebar-alt');
    border-radius: 0 #{borders.get('radius')} #{borders.get('radius')} 0;

    @include normalize-text;

    margin: 0;
    padding: 0;

    color: var(--pre-fore-color, #{colors.get('fore-alt')}); // Allows live color tunning
    font-family: fonts.get-stack('code');
    font-size: fonts.get-size('code');
    font-weight: normal;
    margin: boxmodel.get('margin');
    overflow: auto; // Responsiveness
    overflow-wrap: break-word;
    padding: calc(#{fonts.get-line-spacing('small')} * #{boxmodel.get('padding')});
    word-break: normal;

    code {
        font-size: 1em;
    }
}

kbd {
    @include normalize-code;
    background-color: var(--kbd-back-color, #{colors.get('back-alt')}); // Allows live color tunning

    // No border color by default and fore color is the default for text, can be altered manually.
    border-radius: borders.get('radius');
    color: var(--kbd-fore-color, #{colors.get('fore-alt')}); // Allows live color tunning

    // This could be a bit counterintuitive and burden the codebase a bit, look into it again?
    padding: calc(#{boxmodel.get('padding')} / 4) calc(#{boxmodel.get('padding')} / 2);
}

samp {
    @include normalize-code;

    font-style: inherit;
}

var {
    @include normalize-code;

    font-style: italic;
}
