//
// Use the HTML inline text semantic to define the meaning, structure, or style of a word, line, or
// any arbitrary piece of text.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//

@use "sass:map";
@use "../../2-settings/colors" as colors;
@use "../../2-settings/fonts" as fonts;
@use "../../2-settings/borders" as borders;

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Box model
//
// Keys:
//   - top: <sup> top position
//   - bottom: <sub> bottom position
$_box-model: (
    "top": -0.5em,
    "bottom": -0.25em,
) !default;

// Font weight for <b> and <strong>
$_bold-font-weight: 700 !default;

// Opacity for input elements when disabled.
$_disabled-opacity: 0.75 !default;

// Fix for elements inside headings not displaying properly.

@mixin normalize-small {
    border: 0;
    font-family: inherit;
    font-size: var(--smaller, #{fonts.get-size("small")});
    margin: 0;
    padding: 0;
}
@mixin normalize {
    border: 0;
    font-size: 1em;
    margin: 0;
    padding: 0;
}

// Prevent element from affecting the line height in all browsers.

@mixin normalize-line-height {
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
@mixin text-decoration($line: underline, $style: solid, $color: currentColor) {
    // As text-decoration shorthand may be too recent for your browser.
    // We use also longhand declarations.
    -webkit-text-decoration: var(--text-decoration-line, $line);
    text-decoration: var(--text-decoration-line, $line);
    -webkit-text-decoration-color: var(--text-decoration-color, $color);
    text-decoration-color: var(--text-decoration-color, $color);
    -webkit-text-decoration-style: var(--text-decoration-style, $style);
    text-decoration-style: var(--text-decoration-style, $style);
}

// default link style

@mixin style-link {
    @include text-decoration; // Opinionated style-fix for all browsers.

    background-color: var(--any-link-back-color, transparent);
    color: var(--any-link-color, colors.get("link"));
    -webkit-transition: 250ms ease-in;
    transition: 250ms ease-in;

    &:not(:focus):hover,
    &:not(:focus):active {
        background-color: var(--any-link-back-hover-color, transparent);
        border-bottom: 1px solid currentColor;
        border-top: 1px solid currentColor;
        color: var(--any-link-hover-color, colors.get("link"));
        text-decoration: none;
    }

    &:focus {
        outline: var(--any-link-focus-color, colors.get("link")) solid 0.125rem;
        outline-offset: 0.0625em;
        text-decoration: none;
    }

    &.variant {
        background-image: linear-gradient(to right, var(--any-link-back-color-1, colors.get("transparent")), var(--any-link-back-color-2, colors.get("transparent")));
        background-position: 0 95%;
        background-repeat: no-repeat;
        background-size: 100% 1px;

        &:not(:focus):hover,
        &:not(:focus):active {
            background-image: linear-gradient(to right, var(--any-link-back-hover-color-1, colors.get("link")), var(--any-link-back-hover-color-2, colors.get("link")));
            background-size: 100% 100%;
            border: 0;
            color: var(--any-link-hover-color, colors.get("white"));
        }

        &:focus {
            background-image: none;
        }
    }
}

/* Inline text semantic styling */

a {
    @include normalize;

    color: inherit;
    font-family: inherit; // Fix for elements inside headings not displaying properly.
    outline: transparent solid; // We remove it but we provide alternative styling.
    text-decoration: none;

    // Selects any element that would be matched by :link or :visited
    // Buttons have an another style.
    &:not([class~="button"]):not([role="button"]):-webkit-any-link,
    &:not([class~="button"]):not([role="button"]):-moz-any-link,
    &:not([class~="button"]):not([role="button"]):any-link {
        @include style-link;
    }
}

abbr[title] {
    @include normalize;
    @include text-decoration($style: dotted); // Opinionated style-fix for all browsers.
}

b,
strong {
    @include normalize;

    font-weight: $_bold-font-weight;
}

data {
    @include normalize;
    @include text-decoration($style: dotted); // Opinionated style-fix for all browsers.

    &:hover::after,
    &:active::after,
    &:focus::after {
        content: " (ID " attr(value) ")";
    }
}

@supports (cursor: help) {
    abbr[title] {
        cursor: help;
    }

    data {
        cursor: help;
    }
}

// Fix for elements inside headings not displaying properly.
del,
em,
i,
ins,
span,
u {
    @include normalize;
}

s {
    @include normalize;

    // The presence of the s element is not announced by most screen reading technology
    // in its default configuration. It can be made to be announced by using the CSS
    // content property, along with the ::before and ::after pseudo-elements.
    &::before,
    &::after {
        -webkit-clip-path: inset(100%);
        clip-path: inset(100%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }

    &::before {
        content: " [start of stricken text] ";
    }

    &::after {
        content: " [end of stricken text] ";
    }
}

small {
    @include normalize-small;
}

sub {
    @include normalize-small;
    @include normalize-line-height;

    bottom: map.get($_box-model, "bottom");
}

sup {
    @include normalize-small;
    @include normalize-line-height;

    top: map.get($_box-model, "top");
}

.text-centered {
    text-align: center;
}

.text-justified {
    text-align: justify;
}

.text-left-aligned {
    text-align: left;
}

.text-right-aligned {
    text-align: right;
}
