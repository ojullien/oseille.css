//
// Use the HTML inline text semantic to define the meaning, structure, or style of a word, line, or
// any arbitrary piece of text.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//
@use 'sass:map';
@use '../../2-settings/colors' as colors;
@use '../../2-settings/fonts' as fonts;
@use '../../2-settings/borders' as borders;

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Box model
//
// Keys:
//   - top: <sup> top position
//   - bottom: <sub> bottom position
$_box-model: (
    'top': -0.5em,
    'bottom': -0.25em,
) !default;

// Font weight for <b> and <strong>
$_bold-font-weight: 700 !default;

// Opacity for input elements when disabled.
$_disabled-opacity: 0.75 !default;

/* Inline text semantic styling */

// Fix for elements inside headings not displaying properly.
%_normalize_small {
    margin: 0;
    padding: 0;
    border: 0;
    font-family: inherit;
    font-size: var(--smaller, #{fonts.get-size('small')});
}

%_normalize {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 1em;
}

// Prevent element from affecting the line height in all browsers.
%_normalize-line-height {
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

a {
    @extend %_normalize;
    font-family: inherit; // Fix for elements inside headings not displaying properly.

    text-decoration: none; // We remove it but we provide alternative styling.
    border-bottom: borders.get('width-relative') solid transparent;
    transition: border-bottom-color 150ms ease-in-out;

    // Same color for visited and not visited link.
    // But Oseille allow live color tunning
    &:link {
        color: var(--link-color, colors.get('link'));
    }

    &:visited {
        color: var(--link-visited-color, colors.get('link'));
    }

    &:hover {
        outline: transparent solid; // We remove it but we provide alternative styling.
        border-bottom-width: borders.get('width-relative-alt');
        border-bottom-color: unset;
    }

    &:focus {
        outline: var(--link-focus-color, colors.get('link')) solid 0.125rem;
        outline-offset: 0.0625em;
    }
}

abbr[title] {
    @extend %_normalize;
    border-bottom: none; // Remove bottom border in Firefox 39- & Chrome 57-
    text-decoration: underline dotted; // Opinionated style-fix for all browsers.
}

b,
strong {
    @extend %_normalize;
    font-weight: $_bold-font-weight;
}

data {
    @extend %_normalize;
    text-decoration: underline dotted; // Opinionated style-fix for all browsers.

    &:hover:after {
        content: ' (ID ' attr(value) ')';
        font-size: 0.7em;
    }
}

@supports (cursor: help) {
    abbr[title] {
        cursor: help;
    }
    data {
        cursor: help;
    }
}

// Fix for elements inside headings not displaying properly.
del,
em,
i,
ins,
span,
u {
    @extend %_normalize;
}

s {
    @extend %_normalize;

    // The presence of the s element is not announced by most screen reading technology
    // in its default configuration. It can be made to be announced by using the CSS
    // content property, along with the ::before and ::after pseudo-elements.
    &:before,
    &:after {
        clip: rect(1px, 1px, 1px, 1px);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
        @supports ((clip-path: inset(100%)) or (-webkit-clip-path: inset(100%))) {
            -webkit-clip-path: inset(100%);
            clip-path: inset(100%);
        }
    }

    &:before {
        content: ' [start of stricken text] ';
    }

    &:after {
        content: ' [end of stricken text] ';
    }
}

small {
    @extend %_normalize_small;
}

sub {
    @extend %_normalize_small;
    @extend %_normalize-line-height;
    bottom: map.get($_box-model, 'bottom');
}

sup {
    @extend %_normalize_small;
    @extend %_normalize-line-height;
    top: map.get($_box-model, 'top');
}

.text-align-center {
    text-align: center;
}

.text-align-justify {
    text-align: justify;
}

.text-align-left {
    text-align: left;
}

.text-align-right {
    text-align: right;
}
