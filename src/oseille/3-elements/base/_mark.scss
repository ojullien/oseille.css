//
// The HTML Mark Text element (<mark>) represents text which is marked or highlighted for reference or notation
// purposes, due to the marked passage's relevance or importance in the enclosing context.
//
@use 'sass:map';
@use '../../default/stdlib';

// Variables.
//
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Palette.
//
// Keys:
//   - fore: text & foreground color
//   - fore-alt: alternative text & foreground color
//   - primary: background color variant. See $secondary-colors in default/colors.scss
//   - secondary: background color variant. See $secondary-colors in default/colors.scss
//   - tertiary: background color variant. See $secondary-colors in default/colors.scss
$_colors: (
    "fore": #f8f8f8,
    "fore-alt": #121212,
    "primary": #215cca,
    "secondary": #ad0000,
    "tertiary": #2ecc40,
) !default;

// Basic box model.
//
// Keys:
//   - padding: creates extra space within an element.
//   - margin: create extra space around an element. We reduce the default web browsers margin.
$_box-spacing: (
    "padding": 0.5rem,
    "margin": 0.5rem,
) !default;

// Borders.
//
// Keys:
//   - radius: rounds the corners of an element's outer border edge.
//   - shadow: shadow effects around an element's frame.
$_borders: (
    "radius": 0.125rem,
    "shadow": none,
) !default;

// Line height
//
// Keys:
//   - main: line height for most elements.
//   - mark: line height for <mark>
$_line-spacing: (
    "main": 1.5,
    "mark": 1.5,
) !default;

// Font sizes
//
// Keys:
//   - mark: Font size for <mark>.
$_font-sizes: (
    "mark": 0.95em,
) !default;

// Private variables

// Classnames
//
// Keys:
//   - mark: inline-block <mark>
//   - secondary: secondary <mark> color variant.
//   - tertiary: tertiary <mark> color variant.
//   - tag: padding and border radius for tag <mark> size variant.
$_classnames: (
    "mark": "inline-block",
    "secondary": "secondary",
    "tertiary": "tertiary",
    "tag": "tag",
);

/* Mark styling*/

mark {
    margin: 0;
    padding: calc(#{map.get($_box-spacing, "padding")} / 4) calc(#{map.get($_box-spacing, "padding")} / 2);

    border: 0;
    border-radius: map.get($_borders, "radius");

    @include stdlib.box-shadow(map.get($_borders, "shadow"));

    background: var(--primary-color, map.get($_colors, "primary"));
    color: var(--back-color, map.get($_colors, "fore"));

    font-size: map.get($_font-sizes, "mark");
    line-height: map.get($_line-spacing, "mark");

    &.#{map.get($_classnames, "mark")} {
        display: inline-block;
        // This is hardcoded, as we want inline-block <mark> elements to be styled as normal pieces of text, instead of look small and weird.
        font-size: 1em;
        // Line height is reset to the normal line-height.
        line-height: map.get($_line-spacing, "main");
        padding: calc(#{map.get($_box-spacing, "padding")} / 2) #{map.get($_box-spacing, "padding")};
    }

    &.#{map.get($_classnames, "tag")} {
        padding: calc(#{map.get($_box-spacing, "padding")} / 2) #{map.get($_box-spacing, "padding")};
        border-radius: 1em;
    }

    &.#{map.get($_classnames, "secondary")} {
        background: var(--secondary-color, map.get($_colors, "secondary"));
    }

    &.#{map.get($_classnames, "tertiary")} {
        background: var(--tertiary-color, map.get($_colors, "tertiary"));
        color: var(--fore-color, map.get($_colors, "fore-alt"));
    }

    // The presence of the mark element is not announced by most screen reading technology
    // in its default configuration. It can be made to be announced by using the CSS
    // content property, along with the ::before and ::after pseudo-elements.
    &:before,
    &:after {
        clip-path: inset(100%);
        clip: rect(1px, 1px, 1px, 1px);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }

    &:before {
        content: " [highlight start] ";
    }

    &:after {
        content: " [highlight end] ";
    }
}
