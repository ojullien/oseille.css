//
// The elements here are used to create and handle tabular data.
//
// <summary> is deprecated by the HTML5 spec and are not styled anymore.
//
// Responsive tables: it's a bad idea to change the way tables are displayed.
// Instead, use a description list element <dl> that replaces the tables on small screens.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//

@use "sass:map";
@use "../../2-settings/colors" as colors;
@use "../../2-settings/fonts" as fonts;
@use "../../2-settings/borders" as borders;
@use "../../2-settings/box-model" as boxmodel;

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Classnames
//
// Keys:
//   - container: table's parent element name
//   - horizontal: horizontal <table> elements
//   - hover: hoverable <table> elements
//   - strip: striped <table> elements
$_classnames: (
    "container": "table-container",
    "horizontal": "horizontal",
    "hover": "hoverable",
    "strip": "striped",
) !default;

// Includes design tables.
//
// Keys:
//   - horizontal: flag for horizontal tables
//   - striped: flag for striped tables.
//   - hoverable: flag for hoverable tables.
$_includes: (
    "horizontal": true,
    "striped": true,
    "hoverable": true,
) !default;

/* Table styling */

.#{map.get($_classnames,'container')} {
    // Let the table's parent element scroll horizontally.
    overflow-x: auto;
}

table {
    // Correct table border color inheritance in all Chrome and Safari.
    // (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
    //border-color: inherit;
    border: borders.get("medium") solid var(--table-border-color, #{colors.get("grey")});
    border-collapse: collapse;
    letter-spacing: 1px;
    overflow: auto;

    // Remove text indentation from table contents in Chrome and Safari.
    // (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
    text-indent: 0;

    &.full-wide {
        width: 100%;
    }

    &.text-align-left {
        text-align: left;
    }

    &.text-align-center {
        text-align: center;
    }
}

caption {
    margin: calc(2 * #{boxmodel.get("margin")}) 0;
}

thead,
tbody,
tfoot,
tr {
    border: 0;
    margin: 0;
    padding: 0;
}

th,
td {
    border: borders.get("thin") solid var(--table-border-color, #{colors.get("grey")});
    margin: 0;
    padding: calc(2 * #{boxmodel.get("padding")}); // Apply always to overwrite default.
}

th {
    background-color: var(--th-back-color, #{colors.get("grey-lightest")});
    color: var(--th-fore-color, #{colors.get("fore")});
    white-space: nowrap;
}

td {
    background-color: var(--td-back-color, #{colors.get("back")});
    color: var(--td-fore-color, #{colors.get("fore")});
}

// Styling for horizontal tables

@if #{map.get($_includes, "horizontal")} {
    table.#{map.get($_classnames, 'horizontal')} {
        th {
            text-align: right;
        }
    }
}

// Striped tables.

@if #{map.get($_includes, "striped")} {
    table.#{map.get($_classnames, 'strip')} {
        tr:nth-of-type(2n) > td {
            background-color: var(--tr-back-color, #{colors.get("grey-lightest")});
        }
    }
}

// Hoverable tables.

@if #{map.get($_includes, "hoverable")} {
    table.#{map.get($_classnames, 'hover')} {
        tr {
            &:hover,
            &:focus {
                &,
                > td {
                    background-color: var(--table-back-hover-color, #{colors.get("fore")});
                    color: var(--table-fore-hover-color, #{colors.get("back")});
                }
            }
        }
    }
}
