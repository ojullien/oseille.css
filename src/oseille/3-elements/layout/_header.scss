//
// The HTML <header> element represents introductory content, typically a group of introductory or navigational
// aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.
// If it is a child of <body> it defines the global header of a webpage, but if it's a child of an <article> or
// <section> it defines a specific header for that section (try not to confuse this with titles and headings).
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//
@use 'sass:map';
@use '../../2-settings/colors' as colors;
@use '../../2-settings/fonts' as fonts;
@use '../../2-settings/borders' as borders;
@use '../../2-settings/box-model' as boxmodel;
@use '../../2-settings/responsive' as breakpoints;

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Mobile breakpoint
$_mobile-breakpoint: breakpoints.get('medium') - 1px;

// Height of the header element.
$_height: 3.1875rem !default;

// Font size for the header logo element.
$_logo-font-size: 1.75em !default;

// Apply styling only to the bottom border of header? (boolean)
$_only-bottom-border: true !default;

// Should header links and buttons be uppercase? (boolean)
$_links-uppercase: true !default;

// Classnames
//
// Keys:
//   - header: header class
//   - logo: header logo element
//   - button: elements styled as buttons
//   - sticky: sticky header classe
//   - row: grid system
$_classnames: (
    'header': 'page-header',
    'logo': 'logo',
    'button': 'button',
    'sticky': 'sticky',
    'row': 'row',
) !default;

/* Header styling */

header {
    border: 0;
    margin: 0;
    padding: 0;
}

// No box-shadow as it causes lots of weird bugs in Chrome. No margin as it shouldn't have any.
.#{map.get($_classnames, 'header')} {
    // Always apply background color to avoid shine through
    background-color: var(--header-back-color, colors.get('back'));
    color: var(--header-fore-color, colors.get('fore'));
    overflow-x: auto;
    overflow-y: hidden;

    padding: calc(#{boxmodel.get('padding')} / 4) 0;

    // Responsiveness for smaller displays, scrolls horizontally.
    white-space: nowrap;

    @if $_only-bottom-border {
        border-bottom: borders.get('width') solid var(--header-border-color, colors.get('border-lightest'));
    } @else {
        border: borders.get('width') solid var(--header-border-color, colors.get('border-lightest'));
    }

    // Fix for responsive header, using the grid system's row and column alignment.
    //&.#{map.get($_classnames, 'row')} {
    //    box-sizing: content-box;
    //    & .#{map.get($_classnames, 'logo')} {
    //        line-height: 1;
    //    }
    //}

    // Header logo styling.
    .#{map.get($_classnames, 'logo')} {
        // Remove also our alternate style
        box-shadow: none;
        color: var(--header-fore-color, colors.get('fore'));
        font-size: $_logo-font-size;
        padding: boxmodel.get('padding') calc(2 * #{boxmodel.get('padding')});
        text-decoration: none;
    }

    // Link styling.
    button,
    [type='button'],
    .#{map.get($_classnames, 'button')},
    [role='button'] {
        border: 0;
        // Fill the header's height for a better style
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;

        @if $_links-uppercase {
            text-transform: uppercase;
        }
    }

    // Span styling.
    span {
        line-height: calc(#{$_height} - #{boxmodel.get('padding')} * #{fonts.get-line-spacing('main')});
        position: relative;

        // Use universal-padding to offset the padding of the header.
        top: calc(0rem - #{boxmodel.get('padding')} / 4);

        @if $_links-uppercase {
            text-transform: uppercase;
        }
    }

    &.#{map.get($_classnames, 'sticky')} {
        // Scrolling elements containing sticky content can cause performance and accessibility issues.
        // @link https://developer.mozilla.org/en-US/docs/Web/CSS/position
        // @link https://developer.mozilla.org/en-US/docs/Web/CSS/will-change
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        // Deals with certain problems when combined with cards and tables.
        z-index: 1101;

        // Uses media queries to un-fix sticky headers / footers to be able to present content without sticky headers
        // and footers when the space of the viewport is limited.
        @media screen and (max-width: #{$_mobile-breakpoint}) {
            &.unfix {
                position: static;
            }
        }
    }
}
