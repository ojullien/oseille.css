//
// Content sectioning elements allow you to organize the document content into logical pieces.
// Use the sectioning elements to create a broad outline for your page content, including header and footer navigation,
// and heading elements to identify sections of content.
//
// The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6>
// is the lowest.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//

@use "sass:map";
@use "../../2-settings/fonts" as fonts;
@use "../../2-settings/box-model" as boxmodel;
@use "sass:math";

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variables’ default values.
// @link: https://sass-lang.com/documentation/variables

$_font-weight: 500 !default; // Font weight for headings
$_subheading-margin-top: -0.25rem !default; // Top margin of <small> elements in headings

// Palette.
//
// Keys:
//   - fore: text & foreground color
//   - back: background color
//   - subheading-fore: subheading foreground color
//   - subheading-back: subheading background color
$_colors: (
    "fore": inherit,
    "back": inherit,
    "subheading-fore": inherit,
    "subheading-back": inherit,
) !default;

/* Heading styling */

@mixin normalize {
    background-color: var(--heading-back-color, #{map.get($_colors, "back")}); // Allows live color tunning
    border: 0;
    color: var(--heading-fore-color, #{map.get($_colors, "fore")}); // Allows live color tunning
    font-family: fonts.get-stack("heading");
    font-weight: $_font-weight;
    margin: boxmodel.get("margin");
    padding: 0;

    small {
        background-color: var(--subheading-back-color, #{map.get($_colors, "subheading-back")}); // Allows live color tunning
        color: var(--subheading-fore-color, #{map.get($_colors, "subheading-fore")}); // Allows live color tunning
        display: block;
        line-height: fonts.get-line-spacing("subheading");

        @if $_subheading-margin-top != 0 {
            margin-top: $_subheading-margin-top;
        }
    }
}

/* stylelint-disable order/properties-alphabetical-order */
h1 {
    @include normalize;

    font-size: calc(1em * #{math.pow(fonts.get-size("ratio-heading"), 4)});
    line-height: fonts.get-line-spacing("h1");
}

h2 {
    @include normalize;

    font-size: calc(1em * #{math.pow(fonts.get-size("ratio-heading"), 3)});
    line-height: fonts.get-line-spacing("h2");
}

h3 {
    @include normalize;

    font-size: calc(1em * #{math.pow(fonts.get-size("ratio-heading"), 2)});
    line-height: fonts.get-line-spacing("h3");
}

h4 {
    @include normalize;

    font-size: calc(1em * #{fonts.get-size("ratio-heading")});
    line-height: fonts.get-line-spacing("h4");
}

h5 {
    @include normalize;

    font-size: 1em;
    line-height: fonts.get-line-spacing("h5");
}

h6 {
    @include normalize;

    font-size: calc(1em / #{fonts.get-size("ratio-heading")});
    line-height: fonts.get-line-spacing("h6");
}
/* stylelint-enable order/properties-alphabetical-order */
