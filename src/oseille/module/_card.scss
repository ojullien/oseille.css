//
// Card
//
// Display native-looking notifications on mobile devices.
//
@use 'sass:map';
@use '../common/stdlib';

// Public variables.
// May be overrided using @use <url> with (<variable>: <value>, <variable>: <value>)

$border-radius: 0.125rem !default; // Universal border-radius for most elements
$margin: 0.5rem !default; // Universal margin for the most elements
$padding: 0.5rem !default; // Universal padding for the most elements
$box-shadow: none !default; // Universal box-shadow for most elements
$colors: (
    // Background color for the cards.
        "back": #f8f8f8,
    // Text color for the cards.
        "fore": #111,
    // Border color for the cards.
        "border": #ddd
) !default;

// Private variables
$_card-name: "card" !default; // Class name for the cards.
$_normal-width: 320px !default; // Width for normal cards.
$_section-media-height: 200px !default; // Height for cards' media sections.
$_section-name: "section" !default; // Class name for the cards' sections.
$_section-media-name: "media" !default; // Class name for the cards' sections (media cotent).

// Mixin for alternate card (card size variants):
//  $alt-size: The width of the alternate size card.
@mixin make-card-alt-size($alt-size) {
    @media screen and (min-width: #{$alt-size}) {
        max-width: $alt-size;
    }
}

// Mixin for colors properties setting:
//  $alt-colors: map of alternatives colors (<property>:<#color>).
@mixin make-card-alt-color($alt-colors) {
    @each $property, $value in $alt-colors {
        #{$property}: $value;
    }
}

/* Card styling */

.#{$_card-name} {
    // New syntax
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-self: center;
    position: relative;
    width: 100%;

    // Actual styling for the cards
    --fore-color: #{map.get($colors, "fore")};
    --back-color: #{map.get($colors, "back")};
    --border-color: #{map.get($colors, "border")};

    background: var(--back-color);
    color: var(--fore-color);

    border: var(--px) solid var(--border-color);
    border-radius: $border-radius;
    margin: $margin;

    @include stdlib.box-shadow($box-shadow);

    overflow: hidden; // Hide overflow from section borders

    // Card sections
    & > .#{$_section-name} {
        // Reapply background and foreground colors, so that mixins can be applied properly.
        background: var(--back-color);
        color: var(--fore-color);
        box-sizing: border-box;
        margin: 0;
        border: 0; // Clean borders and radiuses for any element-based sections
        border-radius: 0; // Clean borders and radiuses for any element-based sections
        border-bottom: var(--px) solid var(--border-color);
        padding: $padding;
        width: 100%;

        // Media sections
        &.#{$_section-media-name} {
            height: $_section-media-height;
            padding: 0;
            -o-object-fit: cover;
            object-fit: cover;
        }

        // Alternative sections
        &.dark {
            @include make-card-alt-color(
                (
                    "--back-color": #e0e0e0,
                )
            );
        }

        &.double-padded {
            padding: calc(1.5 * #{$padding});
        }

        &:last-child {
            border-bottom: 0; // Clean the extra border for last section
        }
    }

    &.warning {
        @include make-card-alt-color(
            (
                "--back-color": #ffca28,
                "--border-color": #e8b825,
            )
        );
    }

    &.error {
        @include make-card-alt-color(
            (
                "--back-color": #b71c1c,
                "--fore-color": #f8f8f8,
                "--border-color": #a71a1a,
            )
        );
    }

    &.fluid {
        max-width: 100%;
        width: auto;
    }

    &.small {
        @include make-card-alt-size(240px);
    }

    // Responsiveness (if the screen is larger than card, set max-width)
    @include make-card-alt-size($_normal-width);

    &.large {
        @include make-card-alt-size(480px);
    }
}
