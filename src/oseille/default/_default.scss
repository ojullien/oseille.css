//
// Default properties' values for most elements.
//
// Note: all oseille/element and oseille/module libraries have those default values for variables.
// Note: The default oseille flavor (flavor/oseille.scss) does not use this file.
//       It uses the variablesâ€™ default values of each modules.
//
@use 'sass:map';
@use './stdlib';

//$main-font-size: 1.03rem; // Font sizing for all elements
$default-fore-color: #111; // Text & foreground color
$universal-margin: 0.5rem !default; // Universal margin for the most elements
$universal-padding: 0.5rem !default; // Universal padding for the most elements
$universal-border-radius: 0.125rem !default; // Universal border-radius for most elements
$universal-box-shadow: none !default; // Universal box-shadow for most elements
$mobile-breakpoint: 768px; // Breakpoint between small and medium screens (px)

// Main colors.
// Accessibility:
//  - The colour of text and background content must have sufficient contrast.
$primary-colors: (
    // Text & foreground color
        "fore": #121212,
    // Background color
        "back": #f8f8f8,
    // Border color
        "border": #222222
);

// Primary colors palette.
// Accessibility:
//  - The colour of text and background content must have sufficient contrast
//  - Use WCAG Grading tool to find the best shade/tone/tint with your fore / background combinaison
$primary-palette: (
    // Text & foreground color
        "fore-darkest": stdlib.shade(map.get($primary-colors, "fore"), 20%),
        "fore-darker": stdlib.tone(map.get($primary-colors, "fore"), 20%),
        "fore-lighter": stdlib.tint(map.get($primary-colors, "fore"), 20%),
        "fore-lightest": stdlib.tint(map.get($primary-colors, "fore"), 50%),
    // Background colors
        "back-darkest": stdlib.shade(map.get($primary-colors, "back"), 20%),
        "back-darker": stdlib.tone(map.get($primary-colors, "back"), 20%),
        "back-lighter": stdlib.tint(map.get($primary-colors, "back"), 20%),
        "back-lightest": stdlib.tint(map.get($primary-colors, "back"), 50%),
    // Border colors
        "border-darkest": stdlib.shade(map.get($primary-colors, "border"), 20%),
        "border-darker": stdlib.tone(map.get($primary-colors, "border"), 20%),
        "border-lighter": stdlib.tint(map.get($primary-colors, "border"), 20%),
        "border-lightest": stdlib.tint(map.get($primary-colors, "border"), 50%)
);

// Basic box model
// Accessibility:
//   - An inactive space should be provided around actionable elements
//   - Add borders or margins around touch targets to add at least 1px of inactive space.
$box-spacing: (
    // Padding: creates extra space within an element.
        "padding": 0.5rem,
        "padding-alt": 1.5em 0.5rem,
    // Margins: create extra space around an element.
        "margin": 0.5rem,
        "margin-alt": 1.5em 0.5rem,
);

// Borders
$borders: (
    // radius: rounds the corners of an element's outer border edge.
        "radius": 0.125rem,
    // shadow: adds shadow effects around an element's frame.
        "shadow": none
);

// Font stacks
$font-stacks: (
    // Font stack for all elements
        "base": 
        ( -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Helvetica, sans-serif),
    // Code font stack
        "code": (Menlo, Consolas, monospace),
    //  Font stack 'for <q> <figcaption> <blockquote>
        "caption":
        (-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Helvetica, sans-serif),
    // Heading font stack
        "heading":
        (-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Helvetica, sans-serif)
);

// Font sizes
$font-sizes: (
    // Accessible root font size for all elements
        "accessible": 100%,
    // Root font sizing for all elements (`px` only)
        "root": 16px,
    // Font sizing for all elements
        "body": 1rem,
    // Font size for small element ( <small>, <sub>, <sup>)
        "small": 0.75em,
    // Font size for monospace element like <code>, <kbd>, ...
        "code": 0.85em
);

// Breakpoints
$breakpoints: (
    // Medium/mobile screen breakpoint for grid.
        "medium": 768px,
    // Large screen breakpoint for grid.
        "large": 1280px
);

$line-spacing: (
    // Line height for heading.
    "heading": 1.2,
    // Line height for most elements. Use a minimum value of 1.5 for line-height for main paragraph content.
    "main": 1.5,
    // Line height for thematic break
    "hr": 1.25
); 
