//
// Default main colors.
//
// Note: all oseille/element and oseille/module libraries have those default values for variables.
// Note: The default oseille flavor (flavor/oseille.scss) does not use this file.
//       It uses the variablesâ€™ default values of each modules.
//
@use 'sass:map';
@use 'sass:color';

// Mixes a color with white.
@function tint($color, $weight) {
    @return mix(#fff, $color, $weight);
}

// Mixes a color with black.
@function shade($color, $weight) {
    @return mix(#000, $color, $weight);
}

// Mixes a color with grey.
@function tone($color, $weight) {
    @return mix(#808080, $color, $weight);
}

// Main colors.
// Accessibility:
//  - The colour of text and background content must have sufficient contrast.
$primary-colors: (
    // Text & foreground color
        "fore": #121212,
    // Background color
        "back": #f8f8f8,
    // Border color
        "border": #222222
);

// Primary colors palette.
// Accessibility:
//  - The colour of text and background content must have sufficient contrast
//  - Use WCAG Grading tool to find the best shade/tone/tint with your fore / background combinaison
$primary-palette: (
    // Text & foreground color
        "fore-darkest": shade(map.get($primary-colors, "fore"), 20%),
        "fore-darker": tone(map.get($primary-colors, "fore"), 20%),
        "fore-lighter": tint(map.get($primary-colors, "fore"), 20%),
        "fore-lightest": tint(map.get($primary-colors, "fore"), 50%),
    // Background colors
        "back-darkest": shade(map.get($primary-colors, "back"), 20%),
        "back-darker": tone(map.get($primary-colors, "back"), 20%),
        "back-lighter": tint(map.get($primary-colors, "back"), 20%),
        "back-lightest": tint(map.get($primary-colors, "back"), 50%),
    // Border colors
        "border-darkest": shade(map.get($primary-colors, "border"), 20%),
        "border-darker": tone(map.get($primary-colors, "border"), 20%),
        "border-lighter": tint(map.get($primary-colors, "border"), 20%),
        "border-lightest": tint(map.get($primary-colors, "border"), 49%)
);

// Other colors.
// Accessibility:
//  - The colour of text and background content must have sufficient contrast.
$secondary-colors: (
    // link color
        "blue": #215cca,
    // error color
        "red": #e00000,
    // success color
        "green": #218003
);

// Secondary colors palette.
$secondary-palette: (
    // link colors
        "blue-darkest": #0e1c43,
        "blue-darker": #183889,
        "blue-lighter": #4083ae,
        "blue-lightest": #338fff,
    // error color
        "red-darkest": shade(map.get($secondary-colors, "red"), 20%),
        "red-darker": tone(map.get($secondary-colors, "red"), 20%),
        "red-lighter": tint(map.get($secondary-colors, "red"), 20%),
        "red-lightest": tint(map.get($secondary-colors, "red"), 38%),
    // success color
        "green-darkest": shade(map.get($secondary-colors, "green"), 20%),
        "green-darker": tone(map.get($secondary-colors, "green"), 20%),
        "green-lighter": tint(map.get($secondary-colors, "green"), 20%),
        "green-lightest": #619c4f,
);
