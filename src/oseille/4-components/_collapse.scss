//
// Accordions
//
// They are composed of three components - the wrapper, the toggle button and
// the content container. They does not have a consistent native implementation across browsers.
//
// You may override the default values of the settings' variables, if needed, with the @use rule.
// See flavors/oseille.scss and the 2-settings*.scss files.
//
@use 'sass:map';
@use '../2-settings/colors' as colors;
@use '../2-settings/borders' as borders;
@use '../2-settings/box-model' as boxmodel;

// Private variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

$_content-max-height: 100vh !default; // Max height for the content panes in the collapse component

// Classnames
//
// Keys:
//   - wrapper:  Class name for collapse component
//   - toggle:
//   - content:
$_classnames: (
    'wrapper': 'collapse',
) !default;

/* Accordions styling */

.#{map.get($_classnames, 'wrapper')} {
    display: flex;
    flex-direction: column;
    margin: boxmodel.get('margin');
    border-radius: borders.get('radius');
    border-right: borders.get('width') solid var(--accordion-border-color, colors.get('border'));
    border-bottom: borders.get('width') solid var(--accordion-border-color, colors.get('border'));
    border-left: borders.get('width') solid var(--accordion-border-color, colors.get('border'));
    overflow: hidden;

    input {
        display: none;

        & + label {
            display: flex;
            justify-content: normal;
            cursor: pointer;
            padding: calc(1.5 * #{boxmodel.get('padding')});
            color: var(--accordion-fore-color, colors.get('fore'));
            background-color: var(--accordion-back-color, colors.get('back'));
            border-top: borders.get('width') solid var(--accordion-border-color, colors.get('border'));

            &::before {
                content: '\276F';
                width: 1em;
                height: 1em;
                text-align: center;
                transition: all 0.35s;
                margin-right: boxmodel.get('margin');
            }

            &:hover,
            &:focus {
                outline: transparent solid;
                background-color: var(--accordion-back-hover-color, #{colors.get('back-alt')});
                color: var(--accordion-fore-hover-color, #{colors.get('fore-alt')});
                border-color: var(--accordion-border-hover-color, #{colors.get('back-alt')});
            }

            & + div {
                max-height: 0;
                padding: 0 1em;
                overflow: hidden;
                opacity: 0;
                visibility: hidden;
            }
        }

        &:checked {
            & + label {
                background-color: var(--collapse-back-checked-color, colors.get('back-alt'));
                color: var(--collapse-fore-checked-color, #{colors.get('fore-alt')});

                &::before {
                    transform: rotate(90deg);
                }

                & + div {
                    overflow: auto;
                    padding: boxmodel.get('padding');
                    max-height: $_content-max-height;
                    opacity: 1;
                    visibility: visible;
                }
            }
        }
    }
}

.symbol {
    display: inline-block;
    height: 1em;
    vertical-align: -0.125em;
    stroke: currentColor;
    stroke-width: 2;
    fill: none;
    padding-left: 3px;
}
