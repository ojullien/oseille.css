//
// Card
//
@use 'sass:map';
@use '../default/stdlib';

// Variables.
//
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Basic box model.
//
// Keys:
//   - padding: creates extra space within an element.
//   - margin: create extra space around an element. We reduce the default web browsers margin.
$_box-spacing: (
    "padding": 0.5rem,
    "margin": 0.5rem,
) !default;

// Borders.
//
// Keys:
//   - radius: rounds the corners of an element's outer border edge.
//   - shadow: shadow effects around an element's frame.
$_borders: (
    "radius": 0.125rem,
    "shadow": none,
) !default;

// Palette.
//
// Keys:
//   - fore: text & foreground color
//   - back: background color
//   - border: border color. See $secondary-colors.blue in default/color.scss
//   - error-fore: warning colors
//   - error-back: See $secondary-palette.red-lighter in default/color.scss
//   - error-border: See $secondary-palette.red-darkest in default/color.scss
//   - warning-fore: warning colors
//   - warning-back:
//   - warning-border:
//   - alt-back: alternative background color. See $secondary-palette.back-darker in default/color.scss
$_primary-colors: (
    "fore": #121212,
    "back": #f8f8f8,
    "border": #222222,
    "error-fore": #f8f8f8,
    "error-back": #e63333,
    "error-border": #b30000,
    "warning-fore": #121212,
    "warning-back": #ffd553,
    "warning-border": #ffca28,
    "alt-back": #e0e0e0,
) !default;

// Line height
//
// Keys:
//   - main: line height for most elements. Accessibility concerns: Use a minimum value of 1.5 for line-height for main paragraph content.
$-line-spacing: (
    "main": 1.5,
) !default;

// Private variables

// Classnames
//
// Keys:
//   - card: cards
//   - section: cards' sections
//   - media: cards' sections (media content)
$_classnames: (
    "card": "card",
    "section": "section",
    "media": "media",
);

$_normal-width: 320px; // Width for normal cards.
$_section-media-height: 200px; // Height for cards' media sections.

// Mixin for alternate card (card size variants):
//  $alt-size: The width of the alternate size card.
@mixin make-card-alt-size($alt-size) {
    @media screen and (min-width: #{$alt-size}) {
        max-width: $alt-size;
    }
}

/* Card styling */

.#{map.get($_classnames, "card")} {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-self: center;
    position: relative;
    width: 100%;

    // Actual styling for the cards
    background: var(--card-back-color, #{map.get($_primary-colors, "back")});
    color: var(--card-fore-color, #{map.get($_primary-colors, "fore")});

    border: 1px solid var(--card-border-color, #{map.get($_primary-colors, "border")});
    border-radius: map.get($_borders, "radius");
    margin: map.get($_box-spacing, "margin");

    @include stdlib.box-shadow(map.get($_borders, "shadow"));

    // Hide overflow from section borders
    overflow: hidden;

    // Card sections
    & > .#{map.get($_classnames, "section")} {
        // Reapply background and foreground colors, so that mixins can be applied properly.
        background: var(--card-back-color, #{map.get($_primary-colors, "back")});
        color: var(--card-fore-color, #{map.get($_primary-colors, "fore")});
        box-sizing: border-box;
        margin: 0;
        border: 0; // Clean borders and radiuses for any element-based sections
        border-radius: 0; // Clean borders and radiuses for any element-based sections
        border-bottom: 1px solid var(--card-border-color, #{map.get($_primary-colors, "border")});
        padding: map.get($_box-spacing, "padding");
        width: 100%;

        // Media sections
        &.#{map.get($_classnames, "media")} {
            height: $_section-media-height;
            padding: 0;
            @supports ((object-fit: cover) or (-o-object-fit: cover)) {
                -o-object-fit: cover;
                object-fit: cover;
            }
        }

        // Alternative sections
        &.dark {
            background: var(--card-back-color, #{map.get($_primary-colors, "back")});
        }

        &.double-padded {
            padding: calc(#{map.get($_line-spacing, "hr")} * #{map.get($_box-spacing, "padding")});
        }

        &:last-child {
            border-bottom: 0; // Clean the extra border for last section
        }
    }

    &.warning {
        background: var(--card-back-color, #{map.get($_primary-colors, "warning-back")});
        border-color: var(--card-border-color, #{map.get($_primary-colors, "warning-border")});
    }

    &.error {
        background: var(--card-back-color, #{map.get($_primary-colors, "error-back")});
        color: var(--card-fore-color, #{map.get($_primary-colors, "error-fore")});
        border-color: var(--card-border-color, #{map.get($_primary-colors, "error-border")});
    }

    &.fluid {
        max-width: 100%;
        width: auto;
    }

    &.small {
        @include make-card-alt-size(240px);
    }

    // Responsiveness (if the screen is larger than card, set max-width)
    @include make-card-alt-size($_normal-width);

    &.large {
        @include make-card-alt-size(480px);
    }

    &__link {
        // Push the link down. This will keep it positioned at the end regardless of the card height.
        margin-top: auto !important;
    }

    // Normalize typo
    p {
        width: unset;
        max-width: unset;
    }
}
