//
// Default main colors.
//
// Accessibility:
//  - The colour of text and background content must have sufficient contrast
//  - Use WCAG Grading tool to find the best shade/tone/tint with your fore / background combinaison
//
@use 'sass:map';
@use '../1-tools/stdlib' as stdlib;
@use '../1-tools/color' as *;

// Variables.
//
// Variables defined with !default can be configured when loading this module with the @use rule.
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variables’ default values.
// @link: https://sass-lang.com/documentation/variables

//
// Primary colors.
//
// Keys:
//   - blue: link color
//   - red: error color
//   - green: success color
//   - orange: sidebar
//   - black: text & foreground color
//   - white: background color
$primary: (
    'blue': #215cca,
    'red': #ad0000,
    'green': #2ecc40,
    'orange': #ff851b,
    'yellow': #ffdc00,
    'black': #121212,
    'white': #f8f8f8,
    'transparent': transparent,
) !default;

//
// Main colors.
//
// Keys:
//   - fore: text & foreground color
//   - back: background color
//   - border: border color
//   - fore-alt: alternative color for text & foreground.(Inverted)
//   - back-alt: alternative color for background (Inverted)
$secondary: (
    'border': #222,
    'back': map.get($primary, 'white'),
    'back-alt': map.get($primary, 'black'),
    'fore': map.get($primary, 'black'),
    'fore-alt': map.get($primary, 'white'),
) !default;

//
// Primary colors palette.
//
// Keys:
//   - blue-*: link color
//   - red-*: error color
//   - green-*: success color
//   - orange-*: more color
//   - yellow-*: more color
$primary-palette: (
    'blue-darkest': #0e1c43,
    'blue-darker': #183889,
    'blue-lighter': #4083ae,
    'blue-lightest': #338fff,
    'red-darkest': shade(map.get($primary, 'red'), 20%),
    'red-darker': tone(map.get($primary, 'red'), 20%),
    'red-lighter': tint(map.get($primary, 'red'), 20%),
    'red-lightest': tint(map.get($primary, 'red'), 38%),
    'green-darkest': shade(map.get($primary, 'green'), 20%),
    'green-darker': tone(map.get($primary, 'green'), 20%),
    'green-lighter': tint(map.get($primary, 'green'), 20%),
    'green-lightest': tint(map.get($primary, 'green'), 38%),
    'orange-darkest': shade(map.get($primary, 'orange'), 20%),
    'orange-darker': tone(map.get($primary, 'orange'), 20%),
    'orange-lighter': tint(map.get($primary, 'orange'), 20%),
    'orange-lightest': tint(map.get($primary, 'orange'), 38%),
    'yellow-darkest': shade(map.get($primary, 'yellow'), 20%),
    'yellow-darker': tone(map.get($primary, 'yellow'), 20%),
    'yellow-lighter': tint(map.get($primary, 'yellow'), 20%),
    'yellow-lightest': tint(map.get($primary, 'yellow'), 38%),
) !default;

//
// Secondary colors palette.
//
// Keys:
//   - fore-*: text & foreground color
//   - back-*: background color
//   - border-*: border color
$secondary-palette: (
    'fore-darkest': shade(map.get($secondary, 'fore'), 20%),
    'fore-darker': tone(map.get($secondary, 'fore'), 20%),
    'fore-lighter': tint(map.get($secondary, 'fore'), 20%),
    'fore-lightest': tint(map.get($secondary, 'fore'), 50%),
    'back-darkest': shade(map.get($secondary, 'back'), 20%),
    'back-darker': tone(map.get($secondary, 'back'), 20%),
    'back-lighter': tint(map.get($secondary, 'back'), 20%),
    'back-lightest': tint(map.get($secondary, 'back'), 50%),
    'border-darkest': shade(map.get($secondary, 'border'), 20%),
    'border-darker': tone(map.get($secondary, 'border'), 20%),
    'border-lighter': tint(map.get($secondary, 'border'), 20%),
    'border-lightest': tint(map.get($secondary, 'border'), 49.8%),
) !default;

//
// Colors for elements.
//
// Keys:
//   - link: color for <a>:link
//   - visited: color for <a>:visited.
//   - primary: background color variant.
//   - secondary: background color variant.
//   - tertiary: background color variant.
//   - overlay: modal dialog component
$elements: (
    'back-hover': map.get($secondary-palette, 'back-darker'),
    'fore-hover': map.get($primary, 'black'),
    'link': map.get($primary, 'blue'),
    'primary': map.get($primary, 'blue'),
    'secondary': map.get($primary, 'red'),
    'sidebar-alt': map.get($primary, 'blue'),
    'sidebar': map.get($primary, 'orange'),
    'tertiary': map.get($primary, 'green'),
    'visited': map.get($primary-palette, 'blue-darkest'),
    'overlay': rgba(0, 0, 0, 0.45),
) !default;

// Functions.
//
// Returns the value in the color map associated with the given key.
// It returns null if any map doesn’t contain the key.
//
// @param {string} $key - The color that you want to search for
//
@function get($key) {
    $color: stdlib.get-list($key, $primary, $secondary, $primary-palette, $secondary-palette, $elements);

    @if $color == null {
        @warn #{'Color "' + $key + '" not found!'};
    }

    @return $color;
}
