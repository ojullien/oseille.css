//
// Content sectioning elements allow you to organize the document content into logical pieces.
// Use the sectioning elements to create a broad outline for your page content, including header and footer navigation,
// and heading elements to identify sections of content.
//
@use 'sass:map';

// Public variables.
// May be overrided using @use <url> with (<variable>: <value>, <variable>: <value>)

$padding: 0.5rem !default; // Universal padding for the most elements
$height: 3.1875rem !default; // Height of the header element.
$logo-font-size: 1.75rem !default; // Font ize for the header logo element.
$colors: (
    // Background color for the header element.
        "back": #f8f8f8,
    // Text color for the header element.
        "fore": #444,
    // Background color for the header element (hover).
        "hover-back": #f0f0f0,
    // Border color for the header element.
        "border": #ddd
) !default;

// Private variables

$_only-bottom-border: true !default; // Apply styling only to the bottom border of header? (boolean)
$_logo-name: "logo" !default; // Class name for the header logo element.
$_button-class-name: "button" !default; // Class name for elements styled as buttons.
$_sticky-name: "sticky" !default; // Class name for sticky headers and footers.
$_links-uppercase: true !default; // [Should header links and buttons be uppercase? (boolean)
$_row-name: "row" !default; // Class name for the grid system rows.

/* Header styling */
// No box-shadow as it causes lots of weird bugs in Chrome. No margin as it shouldn't have any.
header {
    height: $height;
    background: map.get($colors, "back"); // Always apply background color to avoid shine through
    color: map.get($colors, "fore");

    @if $_only-bottom-border {
        border-bottom: var(--px) solid map.get($colors, "border");
    } @else {
        border: var(--px) solid map.get($colors, "border");
    }

    padding: calc(#{$padding} / 4) 0;

    // Responsiveness for smaller displays, scrolls horizontally.
    white-space: nowrap;
    overflow-x: auto;
    overflow-y: hidden;

    // Header logo styling.
    .#{$_logo-name} {
        color: map.get($colors, "fore");
        font-size: $logo-font-size;
        padding: $padding calc(2 * #{$padding});
        text-decoration: none;
    }

    // Link and span styling.
    span,
    button,
    [type="button"],
    .#{$_button-class-name},
    [role="button"] {
        box-sizing: border-box;
        position: relative;
        top: calc(0rem - #{$padding} / 4); // Use universal-padding to offset the padding of the header.
        height: calc(#{$height} + #{$padding} / 2); // Fill header.
        background: map.get($colors, "back"); // Apply color regardless to override styling from other things.
        line-height: calc(#{$height} - #{$padding} * 1.5);
        text-align: center;
        color: map.get($colors, "fore");
        border: 0;
        border-radius: 0;
        margin: 0;
        @if $_links-uppercase {
            text-transform: uppercase;
        }
    }

    button,
    [type="button"],
    .#{$_button-class-name},
    [role="button"] {
        &:hover,
        &:focus {
            background: map.get($colors, "hover-back");
        }
    }

    .#{$_sticky-name} {
        position: -webkit-sticky; // One of the rare instances where prefixes are necessary.
        position: sticky;
        z-index: 1101; // Deals with certain problems when combined with cards and tables.
        top: 0;
    }

    &.#{$_row-name} {
        box-sizing: content-box;
        & .#{$_logo-name} {
            line-height: 1;
        }
    }
}
