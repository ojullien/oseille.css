//
// Content sectioning elements allow you to organize the document content into logical pieces.
// Use the sectioning elements to create a broad outline for your page content, including header and footer navigation,
// and heading elements to identify sections of content.
//
// The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6>
// is the lowest.
//
@use 'sass:map';
@use 'sass:math';

// Variables.
//
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variables’ default values.
// @link: https://sass-lang.com/documentation/variables

// Basic box model
$_box-spacing: (
    // Margins: create extra space around an element.
        "margin": 0.5rem
) !default;

// Font stacks
$_font-stacks: (
    // Heading font stack
        "heading":
        (-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Helvetica, sans-serif)
) !default;

// Font sizes
$_font-sizes: (
    // Font size ratio for headings. ( h5 is 1em, h1 is 1em * ratio^4. See element/content_sectioning/heading.scss)
        "ratio-heading": 1.25,
    // Font size for small element  ( <small>, <sub>, <sup>, <figcaption>)
        "small": 0.75em
) !default;

// Line heights
$_line-spacing: (
    // Line height for larger font sizes.
        "h1": calc(1ex / 0.42),
        "h2": calc(1ex / 0.42),
        "h3": calc(1ex /0.38),
        "h4":calc(1ex / 0.37),
        "h5": calc(1ex / 0.32),
        "h6": calc(1ex / 0.32),
    // Line height for subheading
        "subheading": calc(1ex / 0.32),
) !default;

// Main colors. WCAG Grading AAA.
$_colors: (
    // Text & foreground color
        "fore": inherit,
    // Background color
        "back": inherit,
    // Subheading foreground color
        "subheading-fore": inherit,
    // Subheading background color
        "subheading-back": inherit
) !default;

$_font-weight: 500 !default; // Font weight for headings
$_subheading-margin-top: 0; // Top margin of <small> elements in headings

/* Heading styling */

%_normalize {
    padding: 0;
    border: 0;

    font-family: map.get($_font-stacks, "heading");
    font-weight: $_font-weight;

    background: var(--heading-back-color, #{map.get($_colors, "back")}); // Allows live color tunning
    color: var(--heading-fore-color, #{map.get($_colors, "fore")}); // Allows live color tunning

    @supports (text-rendering: optimizeLegibility) {
        text-rendering: optimizeLegibility;
    }

    small {
        display: block;

        @if $_subheading-margin-top != 0 {
            margin-top: $_subheading-margin-top;
        }

        line-height: map.get($_line-spacing, "subheading");

        background: var(--subheading-back-color, #{map.get($_colors, "subheading-back")}); // Allows live color tunning
        color: var(--subheading-fore-color, #{map.get($_colors, "subheading-fore")}); // Allows live color tunning
    }
}

h1 {
    @extend %_normalize;
    font-size: calc( 1em * #{math.pow( map.get($_font-sizes, "ratio-heading"), 4)});
    line-height: map.get($_line-spacing, "h1");
    margin: map.get($_line-spacing, "h1") map.get($_box-spacing, "margin") 0;
}

h2 {
    @extend %_normalize;
    font-size: calc( 1em * #{math.pow( map.get($_font-sizes, "ratio-heading"), 3)});
    line-height: map.get($_line-spacing, "h2");
    margin: map.get($_line-spacing, "h2") map.get($_box-spacing, "margin") 0;
}

h3 {
    @extend %_normalize;
    font-size: calc( 1em * #{math.pow( map.get($_font-sizes, "ratio-heading"), 2)});
    line-height: map.get($_line-spacing, "h3");
    margin: map.get($_line-spacing, "h3") map.get($_box-spacing, "margin") 0;
}

h4 {
    @extend %_normalize;
    font-size: calc( 1em * #{map.get($_font-sizes, "ratio-heading")});
    line-height: map.get($_line-spacing, "h4");
    margin: map.get($_line-spacing, "h4") map.get($_box-spacing, "margin") 0;
}

h5 {
    @extend %_normalize;
    font-size: 1em;
    line-height: map.get($_line-spacing, "h5");
    margin: map.get($_line-spacing, "h5") map.get($_box-spacing, "margin") 0;
}

h6 {
    @extend %_normalize;
    font-size: calc( 1em / #{map.get($_font-sizes, "ratio-heading")});
    line-height: map.get($_line-spacing, "h6");
    margin: map.get($_line-spacing, "h6") map.get($_box-spacing, "margin") 0;
}
