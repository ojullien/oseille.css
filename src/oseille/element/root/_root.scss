//
// Sectioning root using top-level elements
//
@use 'sass:map';
@use '../../common/stdlib';

// Variables.
//
// To load this module with configuration, use @use <url> with (<variable>: <value>, <variable>: <value>).
// The configured values will override the variablesâ€™ default values.
// @link: https://sass-lang.com/documentation/variables

// Colors
$_colors: (
    // Text & foreground color
        "fore": #151515,
    // Background color
        "back": #f8f8f8
) !default;

// Font sizes
$_font-sizes: (
    // Accessible root font size for all elements
        "accessible": 100%,
    // Root font sizing for all elements (`px` only)
        "root": 16px,
    // Font sizing for all elements
        "body": 1rem,
    // Font size for small element  ( <small>, <sub>, <sup>, <figcaption>)
        "small": 0.75em,
    // Font size for monospace element like <code>, <kbd>, ...
        "code": 0.85em
) !default;

// Font stack for all elements
$_font-stacks: (
    // Font stack for all elements
    base:
    (-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', Helvetica, sans-serif),
) !default;

$_line-height: 1.5 !default; // Line height for most elements
$__1px: stdlib.rempx(map.get($_font-sizes, "root")) * 1rem; // Calculated rem value of `1px`

/* Top level styling */

html {
    scroll-behavior: smooth;
    font-size: map.get($_font-sizes, "accessible");
    line-height: $_line-height;
    // Prevent adjustments of font size after orientation changes in mobile.
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    text-size-adjust: 100%;
    --px: #{$__1px}; // You may use javascript to update this value according to the font size the browser is using.
}

body {
    margin: 0;
    padding: 0;
    border: 0;
    color: map.get($_colors, "fore");
    background: map.get($_colors, "back");
    font-family: map.get($_font-stacks, "base");
    font-size: map.get($_font-sizes, "body");
    --smaller: #{map.get($_font-sizes, "small")};
    --fore-color: #{map.get($_colors, "fore")};
    --back-color: #{map.get($_colors, "back")};
}
