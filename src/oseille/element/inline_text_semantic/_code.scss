//
// Use the HTML inline text semantic to define the meaning, structure, or style of a word, line, or
// any arbitrary piece of text.
//
@use "sass:map";
@use "sass:color";
@use '../../common/stdlib';

// Public variables.
// May be overrided using @use <url> with (<variable>: <value>, <variable>: <value>)

$font-family: Menlo, Consolas, monospace !default; // Font stack for code elements
$font-size: 0.85em !default; // Font size for <code>, <kbd>
$margin: 0.5rem !default; // Universal margin for the most elements
$padding: 0.5rem !default; // Universal padding for the most elements
$box-shadow: none !default; // Universal box-shadow for most elements
$border-radius: 0.125rem !default; // Universal border-radius for most elements
$pre-colors: (
    "border": #ddd,
    "sidebar": #1565c0,
) !default; // Border colors
$fore-color: #111 !default; // Text & foreground color
$back-color: #f8f8f8 !default; // Background color
$code-back-color: #f0f0f0 !default; // <code> background color

/* Code styling */

code {
    @include stdlib.normalize-font-size($font-size, $font-family);
    @include stdlib.normalize-line-height;

    // No border color by default and fore color is the default for text, can be altered manually.
    background: $code-back-color;
    border-radius: $border-radius;
    // This could be a bit counterintuitive and burden the codebase a bit, look into it again?
    padding: calc(#{$padding} / 4) calc(#{$padding} / 2);
    @include stdlib.box-shadow($box-shadow);
}

kbd {
    @include stdlib.normalize-font-size($font-size, $font-family);
    @include stdlib.normalize-line-height;

    // No border color by default, can be altered manually.
    background: $fore-color;
    color: $back-color;
    border-radius: $border-radius;
    // This could be a bit counterintuitive and burden the codebase a bit, look into it again?
    padding: calc(#{$padding} / 4) calc(#{$padding} / 2);
    @include stdlib.box-shadow($box-shadow);
}

pre {
    @include stdlib.normalize-font-size($font-size, $font-family);
    overflow: auto; // Responsiveness
    background: $back-color;
    padding: calc(1.5 * #{$padding});
    margin: #{$margin};
    border: var(--px) solid map.get($pre-colors, "border");
    border-left: calc(4 * var(--px)) solid map.get($pre-colors, "sidebar");
    border-radius: 0 $border-radius $border-radius 0;
    @include stdlib.box-shadow($box-shadow);
}

samp {
    @include stdlib.normalize-font-size($font-size, $font-family);
}
