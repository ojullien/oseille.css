//
// The elements here are used to create and handle tabular data.
//
@use "sass:map";
@use '../../common/stdlib';

// Public variables.
// May be overrided using @use <url> with (<variable>: <value>, <variable>: <value>)

$margin: 0.5rem !default; // Universal margin for the most elements
$padding: 0.5rem !default; // Universal padding for the most elements
$box-shadow: none !default; // Universal box-shadow for most elements
$border-radius: 0.125rem !default; // Universal border-radius for most elements
$max-height: 400px !default; // Maximum height of <table> elements (non-horizontal).
$font-size: 1.5rem !default; // Font size for <caption> elements.
$colors: (
    // Border color for <table> elements.
        "border": #aaa,
    // Border color for the border between <thead> and <tbody>.
        "separator": #666,
    // Background color for <th> elements.
        "th-back": #e6e6e6,
    // Text color for <th> elements.
        "th-fore": #111,
    // Background color for <td> elements.
        "td-back": #f8f8f8,
    // Text color for <td> elements.
        "td-fore": #111,
    // Hover background color for <td> elements in hoverable tables.
        "td-hover": #90caf9,
    // Alternative background color for <td> elements in striped tables.
        "td-alt": #eee
) !default; // Border colors
$mobile-breakpoint: 768px !default; // Breakpoint for <table> mobile view.

// Private variables

$_include-horizontal-table: true !default; // Flag for horizontal tables (`true` \ `false`).
$_horizontal-name: "horizontal" !default; // Class name for horizontal <table> elements.
$_mobile-card-label: "data-label" !default; // Attribute used to replace column headers in mobile view.
$_mobile-label-font-weight: 600 !default; // Font weight for column header labels in mobile view.
$_include-striped-table: true !default; // Flag for striped tables.
$_include-hoverable-table: true !default; // Flag for striped tables.
$_hoverable-name: "hoverable" !default; // Class name for hoverable <table> elements.
$_striped-name: "striped" !default; // Class name for striped <table> elements.

// Table styling

// Desktop view (scrollable vertical tables).
table {
    border-collapse: separate;
    border-spacing: 0;
    margin: 0;
    display: flex;
    flex: 0 1 auto;
    flex-flow: row wrap;
    padding: #{$padding};
    padding-top: 0;

    @if not($_include-horizontal-table) {
        overflow: auto;
        max-height: $max-height;
    }

    caption {
        font-size: $font-size;
        margin: calc(2 * #{$margin}) 0;
        max-width: 100%;
        flex: 0 0 100%;
    }

    thead,
    tbody {
        display: flex;
        flex-flow: row wrap;
        border: var(--px) solid map.get($colors, "border");
        @if not($_include-horizontal-table) {
            max-width: 100%;
            flex: 0 0 100%;
        }
    }

    thead {
        z-index: 999; // Fixes the visibility of the element.
        border-radius: #{$border-radius} #{$border-radius} 0 0;
        border-bottom: var(--px) solid map.get($colors, "separator");
        @if not($_include-horizontal-table) {
            position: sticky;
            top: 0;
        }
    }

    tbody {
        border-top: 0;
        margin-top: calc(0 - #{$margin});
        border-radius: 0 0 $border-radius $border-radius;
    }

    tr {
        display: flex;
        padding: 0; // Apply always to overwrite default.
        @if not($_include-horizontal-table) {
            flex-flow: row wrap;
            flex: 0 0 100%;
        }
    }

    th,
    td {
        padding: calc(2 * #{$padding}); // Apply always to overwrite default.
        @if not($_include-horizontal-table) {
            flex: 1 0 0%;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }

    th {
        text-align: left;
        background: map.get($colors, "th-back");
        color: map.get($colors, "th-fore");
    }

    td {
        background: map.get($colors, "td-back");
        color: map.get($colors, "td-fore");
        border-top: var(--px) solid map.get($colors, "border");
    }

    @if not($_include-horizontal-table) {
        tbody tr:first-child td {
            border-top: 0;
        }
    }
}

// Styling for horizontal tables
@if $_include-horizontal-table {
    table:not(.#{$_horizontal-name}) {
        overflow: auto;
        max-height: $max-height;

        thead,
        tbody {
            max-width: 100%;
            flex: 0 0 100%;
        }

        tr {
            flex-flow: row wrap;
            flex: 0 0 100%;
        }

        th,
        td {
            flex: 1 0 0%;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        thead {
            position: sticky;
            top: 0;
        }

        tbody tr:first-child td {
            border-top: 0;
        }

        thead tr:first-child th {
            &:first-child {
                border-top-left-radius: $border-radius;
            }

            &:last-child {
                border-top-right-radius: $border-radius;
            }
        }

        tbody tr:last-child td {
            &:first-child {
                border-bottom-left-radius: $border-radius;
            }

            &:last-child {
                border-bottom-right-radius: $border-radius;
            }
        }
    }

    table.#{$_horizontal-name} {
        border: 0;

        thead,
        tbody {
            border: 0;
            flex: 0.2 0 0;
            flex-flow: row nowrap;
        }

        tbody {
            overflow: auto;
            justify-content: space-between;
            flex: 0.8 0 0;
            margin-left: 0;
            padding-bottom: calc(#{$padding} / 4);
        }

        tr {
            flex-direction: column;
            flex: 1 0 auto;
        }

        th,
        td {
            width: auto;
            border: 0;
            border-bottom: var(--px) solid map.get($colors, "border");
            &:not(:first-child) {
                border-top: 0;
            }
        }

        th {
            text-align: right;
            border-left: var(--px) solid map.get($colors, "border");
            border-right: var(--px) solid map.get($colors, "separator");
        }

        thead {
            tr:first-child {
                padding-left: 0;
            }
        }

        th:first-child,
        td:first-child {
            border-top: var(--px) solid map.get($colors, "border");
        }

        tbody tr:last-child td {
            border-right: var(--px) solid map.get($colors, "border");

            &:first-child {
                border-top-right-radius: 0.25rem;
            }

            &:last-child {
                border-bottom-right-radius: 0.25rem;
            }
        }

        thead tr:first-child th {
            &:first-child {
                border-top-left-radius: 0.25rem;
            }

            &:last-child {
                border-bottom-left-radius: 0.25rem;
            }
        }
    }
} @else {
    table {
        thead tr:first-child th {
            &:first-child {
                border-top-left-radius: $border-radius;
            }

            &:last-child {
                border-top-right-radius: $border-radius;
            }
        }

        tbody tr:last-child td {
            &:first-child {
                border-bottom-left-radius: $border-radius;
            }

            &:last-child {
                border-bottom-right-radius: $border-radius;
            }
        }
    }
}

// Mobile
@media screen and (max-width: #{$mobile-breakpoint - 1px}) {
    @if $_include-horizontal-table {
        table,
        table.#{$_horizontal-name} {
            border-collapse: collapse;
            border: 0;
            width: 100%;
            display: table;

            // Accessibility (element is not visible, but screen readers read it normally)
            thead,
            th {
                border: 0;
                height: 1px;
                width: 1px;
                margin: -1px;
                overflow: hidden;
                padding: 0;
                position: absolute;
                clip: rect(0 0 0 0);
                -webkit-clip-path: inset(100%);
                clip-path: inset(100%);
            }

            tbody {
                border: 0;
                display: table-row-group;
            }

            tr {
                display: block;
                border: var(--px) solid map.get($colors, "border");
                border-radius: #{$border-radius};

                @include stdlib.box-shadow($box-shadow);

                background: #fafafa; // use variables, this is a test (body)
                padding: #{$padding};
                margin: #{$margin};
                margin-bottom: calc(2 * #{$margin});
            }

            th,
            td {
                width: auto;
            }

            td {
                display: block;
                border: 0;
                text-align: right;
            }

            td:before {
                content: attr(#{$_mobile-card-label});
                float: left;
                font-weight: $_mobile-label-font-weight;
            }

            th:first-child,
            td:first-child {
                border-top: 0;
            }

            tbody tr:last-child td {
                border-right: 0;
            }
        }
    } @else {
        table {
            border-collapse: collapse;
            border: 0;
            width: 100%;
            display: table;

            // Accessibility (element is not visible, but screen readers read it normally)
            thead,
            th {
                border: 0;
                height: 1px;
                width: 1px;
                margin: -1px;
                overflow: hidden;
                padding: 0;
                position: absolute;
                clip: rect(0 0 0 0);
                -webkit-clip-path: inset(100%);
                clip-path: inset(100%);
            }

            tbody {
                border: 0;
                display: table-row-group;
            }

            tr {
                display: block;
                border: var(--px) solid map.get($colors, "border");
                border-radius: #{$border-radius};

                @include stdlib.box-shadow($box-shadow);

                background: #fafafa; // use variables, this is a test (body)
                padding: #{$padding};
                margin: #{$margin};
                margin-bottom: calc(2 * #{$margin});
            }

            td {
                display: block;
                border: 0;
                text-align: right;
            }

            td:before {
                content: attr(#{$_mobile-card-label});
                float: left;
                font-weight: $_mobile-label-font-weight;
            }
        }
    }
}

// Striped tables.
@if $_include-striped-table {
    table.#{$_striped-name} {
        tr:nth-of-type(2n) > td {
            background: map.get($colors, "td-alt");
        }
    }

    // Responsiveness for striped tables.
    @media screen and (max-width: #{$mobile-breakpoint}) {
        table.#{$_striped-name} {
            tr:nth-of-type(2n) {
                background: map.get($colors, "td-alt");
            }
        }
    }
}
// Hoverable tables.
@if $_include-hoverable-table {
    table.#{$_hoverable-name} {
        tr {
            &:hover,
            &:focus {
                &,
                & > td {
                    background: map.get($colors, "td-hover");
                }
            }
        }
    }

    @media screen and (max-width: #{$mobile-breakpoint}) {
        table.#{$_hoverable-name} {
            tr {
                &:hover,
                &:focus {
                    &,
                    & > td {
                        background: map.get($colors, "td-hover");
                    }
                }
            }
        }
    }
}
